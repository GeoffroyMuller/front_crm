@use "sass:list";
@import "./functions";
@import './_variables';

@mixin modifiers($map, $attribute, $prefix: '', $separator: '-', $base: 'base') {

    @each $key,
    $value in $map {
        &#{if($key != $base, #{$prefix}#{$key},
        '')
    }

        {
        @if type-of($value)=='map' {
            @include modifiers($value, $attribute, $separator);
        }

        @else {
            #{$attribute}: $value;
        }
    }
}
}

@mixin flex-separator() {
    > *:not(:first-child)::before {
        content: "";
        border: 0.5px solid #d3d3d3;
        align-self: stretch;
    }
}

@mixin flex($direction, $justify-content, $align-items, $spacing-value: none) {
    $directions: row, col, column;

    @if not list.index($directions, $direction) {
        @warn "Unknown property #{$direction}";
    }

    display: flex;

    @if $direction==col or $direction==column {
        flex-direction: column;
    }

    @if $spacing-value !=none {
        &>* {
            @if $direction==col or $direction==column {
                @if unitless($spacing-value) {
                    margin-bottom: spacing($spacing-value);
                }

                @else {
                    margin-bottom: $spacing-value;
                }

                &:last-child {
                    margin-bottom: 0;
                }
            }

            @else {
                @if unitless($spacing-value) {
                    margin-right: spacing($spacing-value);
                }

                @else {
                    margin-right: $spacing-value;
                }


                &:last-child {
                    margin-right: 0;
                }
            }
        }
    }

    justify-content: $justify-content;
    align-items: $align-items;
}


@mixin grid($columns: 0, $rows: 0, $gap: 0) {
    display: grid;
    @if $columns != 0 {
        grid-template-columns: repeat($columns, minmax(0, 1fr));
    }
    @if $rows != 0 {
        grid-template-rows: repeat($rows, minmax(0, 1fr));
    }
    @if $gap != 0 {
        gap: spacing($gap);
    }
}

@mixin unselectable {
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

@mixin typo($_type: none) {
    @if type-of(map-deep-get($typos, $_type)) == "map" {
        @each $key, $value in map-deep-get($typos, $_type) {
            #{$key}: $value
        }
    }
}